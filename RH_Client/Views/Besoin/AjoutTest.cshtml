@page
@{
    @* Object[] criteres = (Object[]) ViewBag.Criteres; *@
}

@ViewBag.Message

<div class="row grid-margin stretch-card"  id="primary">
    <div class="row col-12">
        <div class="col-md-12 grid-margin">
            <div class="row">
            <div class="col-12 col-xl-8 mb-4 mb-xl-0">
                <h3 class="font-weight-bold">Creer votre Quiz</h3>
                <h6 class="font-weight-normal mb-0"> Les questions sont automatiquement lies au dernier <span class="text-primary">besoin</span> inseree </h6>
            </div>
            </div>
        </div>
    </div>
    <div class="row col-md-12">
        <form action="@Url.Action("Ajout", "Test")" method="post" style="width: 100%;">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card box-shadow">
                    <div class="card-body questionReponse">
                        <!-- Modal Header -->
                        <div class="modal-header b-0">
                            <p class="card-title">Question 01</p>
                            <button class="btn p-0" onclick="javascript:hidde('ajout')">
                                <i class="mdi mdi-close"></i>
                            </button>
                        </div>
                        <p class="ml-3">
                            <input type="text" class="font-weight-500" style="border: none;" placeholder="Entrez votre question" name="libelle">
                        </p>
                        <p class="ml-3">
                            <input type="number" class="font-weight-500" style="border: none;" name="point" step="0.01">
                        </p>
                        <div class="card-body">
                            <h4 class="card-title">Propositions</h4>
                            <div class="list-wrapper pt-2" style="overflow: unset;">
                                <ul class="d-flex flex-column-reverse todo-list todo-list-custom">
                                    <li class="proposition">
                                        <div class="form-check">
                                            <label class="form-check-label">
                                                <input class="form-check-input" type="checkbox" name="verite" value="1"/>
                                            </label>
                                        </div>
                                        <input type="text" class="b-0 w-100"  value="Exemple de proposition" name="reponses"/>
                                        <i class="remove ti-close"></i>
                                    </li>
                                </ul>
                            </div>
                            <div class="add-items d-flex mb-0 mt-2">
                                <input type="text" class="form-control todo-list-input"  placeholder="Entrez votre proposition">
                                <button class="btn btn-icon text-primary bg-transparent" onclick="addProposal(this)"><i class="icon-circle-plus"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-10 mb-3 mt-2">
                <button class="btn btn-primary" onclick="addQuestionReponse()" id="ajoutQuestionReponse">
                    <i class="ti-plus btn-icon-prepend"></i>
                </button>
            </div>
            <div class="mb-3 mt-2">
                <button class="btn btn-primary" onclick="javascript:display('ajout')">
                    <i class="ti-save btn-icon-prepend"></i>
                    <span class="ml-1">Enregistrer</span>
                </button>
            </div>
        </form>
    </div>
</div>
<script>
    var iniQuestionReponse = document.getElementsByClassName("questionReponse")[0].parentElement.parentElement.cloneNode(true);
    var boutons = document.getElementsByTagName("button");
    for (let i = 0; i < boutons.length; i++) {
        boutons[i].addEventListener('click', (event) => {
            if (this.type !== 'submit')
                event.preventDefault();
        });
    }
    function addProposal(button){
        console.log(button);
        var questionReponse = button.parentElement.parentElement.parentElement;
        var propositions = questionReponse.getElementsByClassName("proposition");
        var proposition = propositions[0];
        console.log(proposition)
        var nouvelleProposition = proposition.cloneNode(true);
        var propositionAjouter = questionReponse.lastElementChild.lastElementChild.firstElementChild.value;
        console.log(propositionAjouter);
        nouvelleProposition.getElementsByTagName("input")[1].value = propositionAjouter;
        proposition.insertAdjacentElement('beforebegin', nouvelleProposition);
    }
    function addQuestionReponse(){
        var parent = document.getElementById("ajoutQuestionReponse").parentElement;
        parent.insertAdjacentElement('beforebegin', iniQuestionReponse.cloneNode(true));
    }
</script>